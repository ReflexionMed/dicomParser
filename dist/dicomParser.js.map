{"version":3,"sources":["webpack://dicomParser/webpack/universalModuleDefinition","webpack://dicomParser/webpack/bootstrap","webpack://dicomParser/../node_modules/base64-js/index.js","webpack://dicomParser/../node_modules/buffer/index.js","webpack://dicomParser/../node_modules/ieee754/index.js","webpack://dicomParser/../node_modules/isarray/index.js","webpack://dicomParser/../node_modules/webpack/buildin/global.js","webpack://dicomParser/./alloc.js","webpack://dicomParser/./bigEndianByteArrayParser.js","webpack://dicomParser/./byteArrayParser.js","webpack://dicomParser/./byteStream.js","webpack://dicomParser/./dataSet.js","webpack://dicomParser/./findAndSetUNElementLength.js","webpack://dicomParser/./findEndOfEncapsulatedPixelData.js","webpack://dicomParser/./findItemDelimitationItem.js","webpack://dicomParser/./index.js","webpack://dicomParser/./littleEndianByteArrayParser.js","webpack://dicomParser/./parseDicom.js","webpack://dicomParser/./parseDicomDataSet.js","webpack://dicomParser/./readDicomElementExplicit.js","webpack://dicomParser/./readDicomElementImplicit.js","webpack://dicomParser/./readEncapsulatedImageFrame.js","webpack://dicomParser/./readEncapsulatedPixelData.js","webpack://dicomParser/./readEncapsulatedPixelDataFromFragments.js","webpack://dicomParser/./readPart10Header.js","webpack://dicomParser/./readSequenceElementExplicit.js","webpack://dicomParser/./readSequenceElementImplicit.js","webpack://dicomParser/./readSequenceItem.js","webpack://dicomParser/./readTag.js","webpack://dicomParser/./sharedCopy.js","webpack://dicomParser/./util/createJPEGBasicOffsetTable.js","webpack://dicomParser/./util/dataSetToJS.js","webpack://dicomParser/./util/elementToString.js","webpack://dicomParser/./util/index.js","webpack://dicomParser/./util/parseDA.js","webpack://dicomParser/./util/parseTM.js","webpack://dicomParser/./util/util.js","webpack://dicomParser/./version.js"],"names":["alloc","byteArray","length","Buffer","Uint8Array","readUint16","position","readInt16","int16","readUint32","uint32","readInt32","int32","readFloat","byteArrayForParsingFloat","floatArray","Float32Array","buffer","readDouble","Float64Array","readFixedString","result","byte","i","String","fromCharCode","ByteStream","byteArrayParser","undefined","warnings","offset","numBytes","byteArrayView","getByteArrayParser","element","defaultParser","parser","DataSet","elements","tag","index","dataOffset","fixedString","numMatching","match","values","split","trim","replace","value","string","parseFloat","parseInt","bytes","toString","substr","findAndSetUNElementLength","byteStream","itemDelimitationItemLength","maxPosition","groupNumber","elementNumber","itemDelimiterLength","seek","findEndOfEncapsulatedElement","encapsulatedPixelData","basicOffsetTable","fragments","basicOffsetTableItemTag","basicOffsetTableItemlength","numFragments","push","baseOffset","findItemDelimitationItemAndSetElementLength","default","parseDicom","parseDicomDataSet","options","readTransferSyntax","metaHeaderDataSet","x00020010","transferSyntaxElement","isExplicit","transferSyntax","getDataSetByteStream","inflater","fullByteArrayCallback","pako","deflated","slice","inflated","inflateRaw","fullByteArray","set","mergeDataSets","instanceDataSet","propertyName","hasOwnProperty","concat","readDataSet","explicit","dataSetByteStream","dataSet","parseDicomDataSetExplicit","parseDicomDataSetImplicit","e","ex","exception","parseTheByteStream","untilTag","vrCallback","readDicomElementExplicit","getDataLengthSizeInBytesForVR","vr","dataLengthSizeBytes","hadUndefinedLength","readDicomElementImplicit","isSequence","nextTag","readEncapsulatedImageFrame","findFragmentIndexWithOffset","calculateNumberOfFragmentsForFrame","frameIndex","startFragmentIndex","nextFrameOffset","pixelDataElement","readEncapsulatedPixelData","deprecatedNoticeLogged","frame","console","log","readEncapsulatedPixelDataFromFragments","calculateBufferSize","startFragment","bufferSize","fragmentZeroPosition","fragmentHeaderSize","pixelData","pixelDataIndex","fragmentOffset","j","readPart10Header","littleEndianByteStream","readPrefix","prefix","readTheHeader","readSequenceItemsExplicit","readDicomDataSetExplicitUndefinedLength","readSequenceItemExplicit","item","readSQElementUndefinedLengthExplicit","items","readSQElementKnownLengthExplicit","readSequenceItemsImplicit","readDicomDataSetImplicitUndefinedLength","readSequenceItemImplicit","readSQElementUndefinedLengthImplicit","readSQElementKnownLengthImplicit","readSequenceItem","readTag","sharedCopy","byteOffset","createJPEGBasicOffsetTable","isEndOfImageMarker","isFragmentEndOfImage","fragmentIndex","fragment","findLastImageFrameFragmentIndex","endFragmentIndex","explicitDataSetToJS","util","omitPrivateAttibutes","maxElementLength","isPrivateTag","sequenceItems","asString","explicitElementToString","textResult","multiElementToString","numItems","func","call","isStringVr","num","toUpperCase","uint16","double","float","parseDA","daysInMonth","m","y","isValidDate","d","isNaN","date","validate","yyyy","substring","mm","dd","year","month","day","parseTM","time","hh","ss","ffffff","hours","minutes","seconds","fractionalSeconds","stringVrs","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","LO","LT","OB","OD","OF","OW","PN","SH","SL","SQ","SS","ST","TM","UI","UL","UN","UR","US","UT","lastGroupDigit","groupIsOdd","parsePN","personName","stringValues","familyName","givenName","middleName","suffix"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA,cAAM;AACN;AACA;AACA,cAAM;AACN;AACA;AACA;AACA,eAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA,sDAA8C;AAC9C;AACA;AACA,oCAA4B;AAC5B,qCAA6B;AAC7B,yCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAA6B;AAC7B,qCAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAqB,gBAAgB;AACrC;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,6BAAqB,gBAAgB;AACrC;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAAkB,8BAA8B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA,eAAO;AACP;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,gBAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,kBAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,eAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA,gBAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA,8CAAsC,uBAAuB;;;AAG7D;AACA;;;;;;;;;;;;;ACxvBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;;;;kBCbwBA,K;AANxB;;;;;;AAMe,SAASA,KAAT,CAAgBC,SAAhB,EAA2BC,MAA3B,EAAmC;AAChD,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCF,qBAAqBE,MAA1D,EAAkE;AAChE,WAAOA,OAAOH,KAAP,CAAaE,MAAb,CAAP;AACD,GAFD,MAEO,IAAID,qBAAqBG,UAAzB,EAAqC;AAC1C,WAAO,IAAIA,UAAJ,CAAeF,MAAf,C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","file":"dicomParser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dicom-parser\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dicom-parser\"] = factory();\n\telse\n\t\troot[\"dicomParser\"] = factory();\n})(this, function() {\nreturn "," \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = this[\"webpackHotUpdate\"];\n \tthis[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\t;\n \t\thead.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\")\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \tvar hotCurrentHash = \"cdd07eb40f2d80084b3c\"; // eslint-disable-line no-unused-vars\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule; // eslint-disable-line no-unused-vars\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\n \tvar hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1)\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) me.children.push(request);\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (typeof dep === \"undefined\") hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (typeof dep === \"undefined\") hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\")\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"dicomParser\";\n \t\t\t{\n \t\t\t\t// eslint-disable-line no-lone-blocks\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(\"./index.js\")(__webpack_require__.s = \"./index.js\");\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * Creates a new byteArray of the same type (Uint8Array or Buffer) of the specified length.\n * @param byteArray the underlying byteArray (either Uint8Array or Buffer)\n * @param length number of bytes of the Byte Array\n * @returns {object} Uint8Array or Buffer depending on the type of byteArray\n */\nexport default function alloc (byteArray, length) {\n  if (typeof Buffer !== 'undefined' && byteArray instanceof Buffer) {\n    return Buffer.alloc(length);\n  } else if (byteArray instanceof Uint8Array) {\n    return new Uint8Array(length);\n  }\n  throw 'dicomParser.alloc: unknown type for byteArray';\n}\n","/**\n * Internal helper functions for parsing different types from a big-endian byte array\n */\nexport default {\n\n  /**\n     *\n     * Parses an unsigned int 16 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed unsigned int 16\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readUint16 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readUint16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readUint16: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] << 8) + byteArray[position + 1];\n  },\n\n  /**\n     *\n     * Parses a signed int 16 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed signed int 16\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readInt16 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readInt16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readInt16: attempt to read past end of buffer';\n    }\n    var int16 = (byteArray[position] << 8) + byteArray[position + 1];\n    // fix sign\n\n    if (int16 & 0x8000) {\n      int16 = int16 - 0xFFFF - 1;\n    }\n\n    return int16;\n  },\n\n  /**\n     * Parses an unsigned int 32 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed unsigned int 32\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readUint32 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readUint32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readUint32: attempt to read past end of buffer';\n    }\n\n    var uint32 = (256 * (256 * (256 * byteArray[position] +\n                                          byteArray[position + 1]) +\n                                          byteArray[position + 2]) +\n                                          byteArray[position + 3]);\n\n    return uint32;\n  },\n\n  /**\n     * Parses a signed int 32 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed signed int 32\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readInt32 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readInt32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readInt32: attempt to read past end of buffer';\n    }\n\n    var int32 = ((byteArray[position] << 24) +\n                     (byteArray[position + 1] << 16) +\n                     (byteArray[position + 2] << 8) +\n                      byteArray[position + 3]);\n\n    return int32;\n  },\n\n  /**\n     * Parses 32-bit float from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed 32-bit float\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readFloat (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readFloat: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readFloat: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    var byteArrayForParsingFloat = new Uint8Array(4);\n\n    byteArrayForParsingFloat[3] = byteArray[position];\n    byteArrayForParsingFloat[2] = byteArray[position + 1];\n    byteArrayForParsingFloat[1] = byteArray[position + 2];\n    byteArrayForParsingFloat[0] = byteArray[position + 3];\n    var floatArray = new Float32Array(byteArrayForParsingFloat.buffer);\n\n\n    return floatArray[0];\n  },\n\n  /**\n     * Parses 64-bit float from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed 64-bit float\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readDouble (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readDouble: position cannot be less than 0';\n    }\n\n    if (position + 8 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readDouble: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    var byteArrayForParsingFloat = new Uint8Array(8);\n\n    byteArrayForParsingFloat[7] = byteArray[position];\n    byteArrayForParsingFloat[6] = byteArray[position + 1];\n    byteArrayForParsingFloat[5] = byteArray[position + 2];\n    byteArrayForParsingFloat[4] = byteArray[position + 3];\n    byteArrayForParsingFloat[3] = byteArray[position + 4];\n    byteArrayForParsingFloat[2] = byteArray[position + 5];\n    byteArrayForParsingFloat[1] = byteArray[position + 6];\n    byteArrayForParsingFloat[0] = byteArray[position + 7];\n    var floatArray = new Float64Array(byteArrayForParsingFloat.buffer);\n\n\n    return floatArray[0];\n  }\n};\n","/**\n * Internal helper functions common to parsing byte arrays of any type\n */\n\n/**\n * Reads a string of 8-bit characters from an array of bytes and advances\n * the position by length bytes.  A null terminator will end the string\n * but will not effect advancement of the position.  Trailing and leading\n * spaces are preserved (not trimmed)\n * @param byteArray the byteArray to read from\n * @param position the position in the byte array to read from\n * @param length the maximum number of bytes to parse\n * @returns {string} the parsed string\n * @throws error if buffer overread would occur\n * @access private\n */\nexport function readFixedString (byteArray, position, length) {\n  if (length < 0) {\n    throw 'dicomParser.readFixedString - length cannot be less than 0';\n  }\n\n  if (position + length > byteArray.length) {\n    throw 'dicomParser.readFixedString: attempt to read past end of buffer';\n  }\n\n  var result = '';\n  var byte;\n\n  for (var i = 0; i < length; i++) {\n    byte = byteArray[position + i];\n    if (byte === 0) {\n      position += length;\n\n      return result;\n    }\n    result += String.fromCharCode(byte);\n  }\n\n  return result;\n}\n","import sharedCopy from './sharedCopy.js';\nimport { readFixedString } from './byteArrayParser.js';\n\n/**\n *\n * Internal helper class to assist with parsing. Supports reading from a byte\n * stream contained in a Uint8Array.  Example usage:\n *\n *  var byteArray = new Uint8Array(32);\n *  var byteStream = new dicomParser.ByteStream(dicomParser.littleEndianByteArrayParser, byteArray);\n *\n * */\n\n/**\n * Constructor for ByteStream objects.\n * @param byteArrayParser a parser for parsing the byte array\n * @param byteArray a Uint8Array containing the byte stream\n * @param position (optional) the position to start reading from.  0 if not specified\n * @constructor\n * @throws will throw an error if the byteArrayParser parameter is not present\n * @throws will throw an error if the byteArray parameter is not present or invalid\n * @throws will throw an error if the position parameter is not inside the byte array\n */\nexport default class ByteStream {\n  constructor (byteArrayParser, byteArray, position) {\n    if (byteArrayParser === undefined) {\n      throw 'dicomParser.ByteStream: missing required parameter \\'byteArrayParser\\'';\n    }\n    if (byteArray === undefined) {\n      throw 'dicomParser.ByteStream: missing required parameter \\'byteArray\\'';\n    }\n    if ((byteArray instanceof Uint8Array) === false &&\n          (byteArray instanceof Buffer) === false) {\n      throw 'dicomParser.ByteStream: parameter byteArray is not of type Uint8Array or Buffer';\n    }\n    if (position < 0) {\n      throw 'dicomParser.ByteStream: parameter \\'position\\' cannot be less than 0';\n    }\n    if (position >= byteArray.length) {\n      throw 'dicomParser.ByteStream: parameter \\'position\\' cannot be greater than or equal to \\'byteArray\\' length';\n    }\n    this.byteArrayParser = byteArrayParser;\n    this.byteArray = byteArray;\n    this.position = position ? position : 0;\n    this.warnings = []; // array of string warnings encountered while parsing\n  }\n\n  /**\n     * Safely seeks through the byte stream.  Will throw an exception if an attempt\n     * is made to seek outside of the byte array.\n     * @param offset the number of bytes to add to the position\n     * @throws error if seek would cause position to be outside of the byteArray\n     */\n  seek (offset) {\n    if (this.position + offset < 0) {\n      throw 'dicomParser.ByteStream.prototype.seek: cannot seek to position < 0';\n    }\n    this.position += offset;\n  }\n\n  /**\n     * Returns a new ByteStream object from the current position and of the requested number of bytes\n     * @param numBytes the length of the byte array for the ByteStream to contain\n     * @returns {dicomParser.ByteStream}\n     * @throws error if buffer overread would occur\n     */\n  readByteStream (numBytes) {\n    if (this.position + numBytes > this.byteArray.length) {\n      throw 'dicomParser.ByteStream.prototype.readByteStream: readByteStream - buffer overread';\n    }\n    var byteArrayView = sharedCopy(this.byteArray, this.position, numBytes);\n\n    this.position += numBytes;\n\n    return new ByteStream(this.byteArrayParser, byteArrayView);\n  }\n\n  /**\n     *\n     * Parses an unsigned int 16 from a byte array and advances\n     * the position by 2 bytes\n     *\n     * @returns {*} the parsed unsigned int 16\n     * @throws error if buffer overread would occur\n     */\n  readUint16 () {\n    var result = this.byteArrayParser.readUint16(this.byteArray, this.position);\n\n    this.position += 2;\n\n    return result;\n  }\n\n  /**\n     * Parses an unsigned int 32 from a byte array and advances\n     * the position by 2 bytes\n     *\n     * @returns {*} the parse unsigned int 32\n     * @throws error if buffer overread would occur\n     */\n  readUint32 () {\n    var result = this.byteArrayParser.readUint32(this.byteArray, this.position);\n\n    this.position += 4;\n\n    return result;\n  }\n\n  /**\n     * Reads a string of 8-bit characters from an array of bytes and advances\n     * the position by length bytes.  A null terminator will end the string\n     * but will not effect advancement of the position.\n     * @param length the maximum number of bytes to parse\n     * @returns {string} the parsed string\n     * @throws error if buffer overread would occur\n     */\n  readFixedString (length) {\n    var result = readFixedString(this.byteArray, this.position, length);\n\n    this.position += length;\n\n    return result;\n  }\n}\n","import { readFixedString } from './byteArrayParser.js';\n\n/**\n *\n * The DataSet class encapsulates a collection of DICOM Elements and provides various functions\n * to access the data in those elements\n *\n * Rules for handling padded spaces:\n * DS = Strip leading and trailing spaces\n * DT = Strip trailing spaces\n * IS = Strip leading and trailing spaces\n * PN = Strip trailing spaces\n * TM = Strip trailing spaces\n * AE = Strip leading and trailing spaces\n * CS = Strip leading and trailing spaces\n * SH = Strip leading and trailing spaces\n * LO = Strip leading and trailing spaces\n * LT = Strip trailing spaces\n * ST = Strip trailing spaces\n * UT = Strip trailing spaces\n *\n */\n\nfunction getByteArrayParser (element, defaultParser) {\n  return (element.parser !== undefined ? element.parser : defaultParser);\n}\n\n/**\n * Constructs a new DataSet given byteArray and collection of elements\n * @param byteArrayParser\n * @param byteArray\n * @param elements\n * @constructor\n */\nexport default class DataSet {\n  constructor (byteArrayParser, byteArray, elements) {\n    this.byteArrayParser = byteArrayParser;\n    this.byteArray = byteArray;\n    this.elements = elements;\n  }\n\n  /**\n     * Finds the element for tag and returns an unsigned int 16 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} unsigned int 16 or undefined if the attribute is not present or has data of length 0\n     */\n  uint16 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readUint16(this.byteArray, element.dataOffset + (index * 2));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an signed int 16 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} signed int 16 or undefined if the attribute is not present or has data of length 0\n     */\n  int16 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readInt16(this.byteArray, element.dataOffset + (index * 2));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an unsigned int 32 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} unsigned int 32 or undefined if the attribute is not present or has data of length 0\n     */\n  uint32 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readUint32(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an signed int 32 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} signed int 32 or undefined if the attribute is not present or has data of length 0\n     */\n  int32 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readInt32(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns a 32 bit floating point number (VR=FL) if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} float or undefined if the attribute is not present or has data of length 0\n     */\n  float (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readFloat(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns a 64 bit floating point number (VR=FD) if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} float or undefined if the attribute is not present or doesn't has data of length 0\n     */\n  double (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readDouble(this.byteArray, element.dataOffset + (index * 8));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns the number of string values for the element\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @returns {*} the number of string values or undefined if the attribute is not present or has zero length data\n     */\n  numStringValues (tag) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n      var numMatching = fixedString.match(/\\\\/g);\n\n      if (numMatching === null) {\n        return 1;\n      }\n\n      return numMatching.length + 1;\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns a string for the element.  If index is provided, the element is assumed to be\n     * multi-valued and will return the component specified by index.  Undefined is returned\n     * if there is no component with the specified index, the element does not exist or is zero length.\n     *\n     * Use this function for VR types of AE, CS, SH and LO\n     *\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the entire string\n     * @returns {*}\n     */\n  string (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n\n      if (index >= 0) {\n        var values = fixedString.split('\\\\');\n        // trim trailing spaces\n\n        return values[index].trim();\n      }\n      // trim trailing spaces\n      return fixedString.trim();\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns a string with the leading spaces preserved and trailing spaces removed.\n     *\n     * Use this function to access data for VRs of type UT, ST and LT\n     *\n     * @param tag\n     * @param index\n     * @returns {*}\n     */\n  text (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n\n      if (index >= 0) {\n        var values = fixedString.split('\\\\');\n\n\n        return values[index].replace(/ +$/, '');\n      }\n\n      return fixedString.replace(/ +$/, '');\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses a string to a float for the specified index in a multi-valued element.  If index is not specified,\n     * the first value in a multi-valued VR will be parsed if present.\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the first value\n     * @returns {*} a floating point number or undefined if not present or data not long enough\n     */\n  floatString (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      index = (index !== undefined) ? index : 0;\n      var value = this.string(tag, index);\n\n      if (value !== undefined) {\n        return parseFloat(value);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses a string to an integer for the specified index in a multi-valued element.  If index is not specified,\n     * the first value in a multi-valued VR will be parsed if present.\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the first value\n     * @returns {*} an integer or undefined if not present or data not long enough\n     */\n  intString (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      index = (index !== undefined) ? index : 0;\n      var value = this.string(tag, index);\n\n      if (value !== undefined) {\n        return parseInt(value);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses an element tag according to the 'AT' VR definition (VR=AT).\n     * @param {String} A DICOM tag with in the format xGGGGEEEE.\n     * @returns {String} A string representation of a data element tag or undefined if the field is not present or data is not long enough.\n     */\n  attributeTag (tag) {\n    const element = this.elements[tag];\n\n    if (element && element.length === 4) {\n      const parser = getByteArrayParser(element, this.byteArrayParser).readUint16;\n      const bytes = this.byteArray;\n      const offset = element.dataOffset;\n\n      return `x${(`00000000${(parser(bytes, offset) * 256 * 256 + parser(bytes, offset + 2)).toString(16)}`).substr(-8)}`;\n    }\n\n    return undefined;\n  }\n}\n","/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * reads from the byte stream until it finds the magic number for the Sequence Delimitation\n * Item item and then sets the length of the element\n * @param byteStream\n * @param element\n */\nexport default function findAndSetUNElementLength (byteStream, element) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.findAndSetUNElementLength: missing required parameter \\'byteStream\\'';\n  }\n\n  // group, element, length\n  const itemDelimitationItemLength = 8;\n  const maxPosition = byteStream.byteArray.length - itemDelimitationItemLength;\n\n  while (byteStream.position <= maxPosition) {\n    const groupNumber = byteStream.readUint16();\n\n    if (groupNumber === 0xfffe) {\n      const elementNumber = byteStream.readUint16();\n\n      if (elementNumber === 0xe0dd) {\n        // NOTE: It would be better to also check for the length to be 0 as part of the check above\n        // but we will just log a warning for now\n        const itemDelimiterLength = byteStream.readUint32();\n\n        if (itemDelimiterLength !== 0) {\n          byteStream.warnings(`encountered non zero length following item delimiter at position ${byteStream.position - 4} while reading element of undefined length with tag ${element.tag}`);\n        }\n        element.length = byteStream.position - element.dataOffset;\n\n        return;\n      }\n    }\n  }\n\n  // No item delimitation item - silently set the length to the end\n  // of the buffer and set the position past the end of the buffer\n  element.length = byteStream.byteArray.length - element.dataOffset;\n  byteStream.seek(byteStream.byteArray.length - byteStream.position);\n}\n","import readTag from './readTag.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads an encapsulated pixel data element and adds an array of fragments to the element\n * containing the offset and length of each fragment and any offsets from the basic offset\n * table\n * @param byteStream\n * @param element\n */\nexport default function findEndOfEncapsulatedElement (byteStream, element, warnings) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.findEndOfEncapsulatedElement: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.findEndOfEncapsulatedElement: missing required parameter \\'element\\'';\n  }\n\n  element.encapsulatedPixelData = true;\n  element.basicOffsetTable = [];\n  element.fragments = [];\n\n  const basicOffsetTableItemTag = readTag(byteStream);\n\n  if (basicOffsetTableItemTag !== 'xfffee000') {\n    throw 'dicomParser.findEndOfEncapsulatedElement: basic offset table not found';\n  }\n\n  const basicOffsetTableItemlength = byteStream.readUint32();\n  const numFragments = basicOffsetTableItemlength / 4;\n\n  for (let i = 0; i < numFragments; i++) {\n    const offset = byteStream.readUint32();\n\n    element.basicOffsetTable.push(offset);\n  }\n\n  const baseOffset = byteStream.position;\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const tag = readTag(byteStream);\n    let length = byteStream.readUint32();\n\n    if (tag === 'xfffee0dd') {\n      byteStream.seek(length);\n      element.length = byteStream.position - element.dataOffset;\n\n      return;\n    } else if (tag === 'xfffee000') {\n      element.fragments.push({\n        offset: byteStream.position - baseOffset - 8,\n        position: byteStream.position,\n        length\n      });\n    } else {\n      if (warnings) {\n        warnings.push(`unexpected tag ${tag} while searching for end of pixel data element with undefined length`);\n      }\n\n      if (length > byteStream.byteArray.length - byteStream.position) {\n        // fix length\n        length = byteStream.byteArray.length - byteStream.position;\n      }\n\n      element.fragments.push({\n        offset: byteStream.position - baseOffset - 8,\n        position: byteStream.position,\n        length\n      });\n\n      byteStream.seek(length);\n      element.length = byteStream.position - element.dataOffset;\n\n      return;\n    }\n\n    byteStream.seek(length);\n  }\n\n  if (warnings) {\n    warnings.push(`pixel data element ${element.tag} missing sequence delimiter tag xfffee0dd`);\n  }\n}\n","/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * reads from the byte stream until it finds the magic numbers for the item delimitation item\n * and then sets the length of the element\n * @param byteStream\n * @param element\n */\nexport default function findItemDelimitationItemAndSetElementLength (byteStream, element) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const itemDelimitationItemLength = 8; // group, element, length\n  const maxPosition = byteStream.byteArray.length - itemDelimitationItemLength;\n\n  while (byteStream.position <= maxPosition) {\n    const groupNumber = byteStream.readUint16();\n\n    if (groupNumber === 0xfffe) {\n      const elementNumber = byteStream.readUint16();\n\n      if (elementNumber === 0xe00d) {\n        // NOTE: It would be better to also check for the length to be 0 as part of the check above\n        // but we will just log a warning for now\n        const itemDelimiterLength = byteStream.readUint32(); // the length\n\n        if (itemDelimiterLength !== 0) {\n          byteStream.warnings(`encountered non zero length following item delimiter at position ${byteStream.position - 4} while reading element of undefined length with tag ${element.tag}`);\n        }\n\n        element.length = byteStream.position - element.dataOffset;\n\n        return;\n      }\n    }\n  }\n\n  // No item delimitation item - silently set the length to the end of the buffer and set the position past the end of the buffer\n  element.length = byteStream.byteArray.length - element.dataOffset;\n  byteStream.seek(byteStream.byteArray.length - byteStream.position);\n}\n","export * from './util/index.js';\nexport * from './parseDicomDataSet.js';\nexport * from './byteArrayParser.js';\n\nexport { default as alloc } from './alloc.js';\nexport { default as version } from './version.js';\nexport { default as bigEndianByteArrayParser } from './bigEndianByteArrayParser.js';\nexport { default as ByteStream } from './byteStream.js';\nexport { default as sharedCopy } from './sharedCopy.js';\nexport { default as DataSet } from './dataSet.js';\nexport { default as findAndSetUNElementLength } from './findAndSetUNElementLength.js';\nexport { default as findEndOfEncapsulatedElement } from './findEndOfEncapsulatedPixelData.js';\nexport { default as findItemDelimitationItemAndSetElementLength } from './findItemDelimitationItem.js';\nexport { default as littleEndianByteArrayParser } from './littleEndianByteArrayParser.js';\nexport { default as parseDicom } from './parseDicom.js';\nexport { default as readDicomElementExplicit } from './readDicomElementExplicit.js';\nexport { default as readDicomElementImplicit } from './readDicomElementImplicit.js';\nexport { default as readEncapsulatedImageFrame } from './readEncapsulatedImageFrame.js';\nexport { default as readEncapsulatedPixelData } from './readEncapsulatedPixelData.js';\nexport { default as readEncapsulatedPixelDataFromFragments } from './readEncapsulatedPixelDataFromFragments.js';\nexport { default as readPart10Header } from './readPart10Header.js';\nexport { default as readSequenceItemsExplicit } from './readSequenceElementExplicit.js';\nexport { default as readSequenceItemsImplicit } from './readSequenceElementImplicit.js';\nexport { default as readSequenceItem } from './readSequenceItem.js';\nexport { default as readTag } from './readTag.js';\n","/**\n * Internal helper functions for parsing different types from a little-endian byte array\n */\n\nexport default {\n\n  /**\n   *\n   * Parses an unsigned int 16 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 16\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readUint16 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readUint16: position cannot be less than 0';\n    }\n\n    if (position + 2 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readUint16: attempt to read past end of buffer';\n    }\n\n    return byteArray[position] + (byteArray[position + 1] * 256);\n  },\n\n  /**\n   *\n   * Parses a signed int 16 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed signed int 16\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readInt16 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readInt16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readInt16: attempt to read past end of buffer';\n    }\n\n    let int16 = byteArray[position] + (byteArray[position + 1] << 8);\n\n    // fix sign\n    if (int16 & 0x8000) {\n      int16 = int16 - 0xFFFF - 1;\n    }\n\n    return int16;\n  },\n\n\n  /**\n   * Parses an unsigned int 32 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 32\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readUint32 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readUint32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readUint32: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] +\n           (byteArray[position + 1] * 256) +\n           (byteArray[position + 2] * 256 * 256) +\n           (byteArray[position + 3] * 256 * 256 * 256));\n  },\n\n  /**\n * Parses a signed int 32 from a little-endian byte array\n *\n * @param byteArray the byte array to read from\n * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 32\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readInt32 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readInt32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readInt32: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] +\n           (byteArray[position + 1] << 8) +\n           (byteArray[position + 2] << 16) +\n           (byteArray[position + 3] << 24));\n  },\n\n  /**\n   * Parses 32-bit float from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed 32-bit float\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readFloat (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readFloat: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readFloat: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    const byteArrayForParsingFloat = new Uint8Array(4);\n\n    byteArrayForParsingFloat[0] = byteArray[position];\n    byteArrayForParsingFloat[1] = byteArray[position + 1];\n    byteArrayForParsingFloat[2] = byteArray[position + 2];\n    byteArrayForParsingFloat[3] = byteArray[position + 3];\n\n    const floatArray = new Float32Array(byteArrayForParsingFloat.buffer);\n\n    return floatArray[0];\n  },\n\n  /**\n   * Parses 64-bit float from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed 64-bit float\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readDouble (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readDouble: position cannot be less than 0';\n    }\n\n    if (position + 8 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readDouble: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    const byteArrayForParsingFloat = new Uint8Array(8);\n\n    byteArrayForParsingFloat[0] = byteArray[position];\n    byteArrayForParsingFloat[1] = byteArray[position + 1];\n    byteArrayForParsingFloat[2] = byteArray[position + 2];\n    byteArrayForParsingFloat[3] = byteArray[position + 3];\n    byteArrayForParsingFloat[4] = byteArray[position + 4];\n    byteArrayForParsingFloat[5] = byteArray[position + 5];\n    byteArrayForParsingFloat[6] = byteArray[position + 6];\n    byteArrayForParsingFloat[7] = byteArray[position + 7];\n\n    const floatArray = new Float64Array(byteArrayForParsingFloat.buffer);\n\n    return floatArray[0];\n  }\n};\n","import alloc from './alloc.js';\nimport bigEndianByteArrayParser from './bigEndianByteArrayParser.js';\nimport ByteStream from './byteStream.js';\nimport DataSet from './dataSet.js';\nimport littleEndianByteArrayParser from './littleEndianByteArrayParser.js';\nimport readPart10Header from './readPart10Header.js';\nimport sharedCopy from './sharedCopy.js';\nimport * as byteArrayParser from './byteArrayParser.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n/**\n * Parses a DICOM P10 byte array and returns a DataSet object with the parsed elements.\n * If the options argument is supplied and it contains the untilTag property, parsing\n * will stop once that tag is encoutered.  This can be used to parse partial byte streams.\n *\n * @param byteArray the byte array\n * @param options object to control parsing behavior (optional)\n * @returns {DataSet}\n * @throws error if an error occurs while parsing.  The exception object will contain a\n *         property dataSet with the elements successfully parsed before the error.\n */\n\nexport default function parseDicom (byteArray, options) {\n  if (byteArray === undefined) {\n    throw 'dicomParser.parseDicom: missing required parameter \\'byteArray\\'';\n  }\n\n  function readTransferSyntax (metaHeaderDataSet) {\n    if (metaHeaderDataSet.elements.x00020010 === undefined) {\n      throw 'dicomParser.parseDicom: missing required meta header attribute 0002,0010';\n    }\n\n    const transferSyntaxElement = metaHeaderDataSet.elements.x00020010;\n\n    return byteArrayParser.readFixedString(byteArray, transferSyntaxElement.dataOffset, transferSyntaxElement.length);\n  }\n\n  function isExplicit (transferSyntax) {\n    // implicit little endian\n    if (transferSyntax === '1.2.840.10008.1.2') {\n      return false;\n    }\n\n    // all other transfer syntaxes should be explicit\n    return true;\n  }\n\n  function getDataSetByteStream (transferSyntax, position) {\n    if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n      // if an infalter callback is registered, use it\n      if (options && options.inflater) {\n        const fullByteArrayCallback = options.inflater(byteArray, position);\n\n        return new ByteStream(littleEndianByteArrayParser, fullByteArrayCallback, 0);\n      }\n      // if running on node, use the zlib library to inflate\n      // http://stackoverflow.com/questions/4224606/how-to-check-whether-a-script-is-running-under-node-js\n//       else if (typeof module !== 'undefined' && this.module !== module) {\n//         // inflate it\n//         const zlib = require('zlib');\n//         const deflatedBuffer = sharedCopy(byteArray, position, byteArray.length - position);\n//         const inflatedBuffer = zlib.inflateRawSync(deflatedBuffer);\n\n//         // create a single byte array with the full header bytes and the inflated bytes\n//         const fullByteArrayBuffer = alloc(byteArray, inflatedBuffer.length + position);\n\n//         byteArray.copy(fullByteArrayBuffer, 0, 0, position);\n//         inflatedBuffer.copy(fullByteArrayBuffer, position);\n\n//         return new ByteStream(littleEndianByteArrayParser, fullByteArrayBuffer, 0);\n//       }\n      // if pako is defined - use it.  This is the web browser path\n      // https://github.com/nodeca/pako\n      else if (typeof pako !== 'undefined') {\n        // inflate it\n        const deflated = byteArray.slice(position);\n        const inflated = pako.inflateRaw(deflated);\n\n        // create a single byte array with the full header bytes and the inflated bytes\n        const fullByteArray = alloc(byteArray, inflated.length + position);\n\n        fullByteArray.set(byteArray.slice(0, position), 0);\n        fullByteArray.set(inflated, position);\n\n        return new ByteStream(littleEndianByteArrayParser, fullByteArray, 0);\n      }\n\n      // throw exception since no inflater is available\n      throw 'dicomParser.parseDicom: no inflater available to handle deflate transfer syntax';\n    }\n\n    // explicit big endian\n    if (transferSyntax === '1.2.840.10008.1.2.2') {\n      return new ByteStream(bigEndianByteArrayParser, byteArray, position);\n    }\n\n    // all other transfer syntaxes are little endian; only the pixel encoding differs\n    // make a new stream so the metaheader warnings don't come along for the ride\n    return new ByteStream(littleEndianByteArrayParser, byteArray, position);\n  }\n\n  function mergeDataSets (metaHeaderDataSet, instanceDataSet) {\n    for (const propertyName in metaHeaderDataSet.elements) {\n      if (metaHeaderDataSet.elements.hasOwnProperty(propertyName)) {\n        instanceDataSet.elements[propertyName] = metaHeaderDataSet.elements[propertyName];\n      }\n    }\n\n    if (metaHeaderDataSet.warnings !== undefined) {\n      instanceDataSet.warnings = metaHeaderDataSet.warnings.concat(instanceDataSet.warnings);\n    }\n\n    return instanceDataSet;\n  }\n\n  function readDataSet (metaHeaderDataSet) {\n    const transferSyntax = readTransferSyntax(metaHeaderDataSet);\n    const explicit = isExplicit(transferSyntax);\n    const dataSetByteStream = getDataSetByteStream(transferSyntax, metaHeaderDataSet.position);\n\n    const elements = {};\n    const dataSet = new DataSet(dataSetByteStream.byteArrayParser, dataSetByteStream.byteArray, elements);\n\n    dataSet.warnings = dataSetByteStream.warnings;\n\n    try {\n      if (explicit) {\n        parseDicomDataSet.parseDicomDataSetExplicit(dataSet, dataSetByteStream, dataSetByteStream.byteArray.length, options);\n      } else {\n        parseDicomDataSet.parseDicomDataSetImplicit(dataSet, dataSetByteStream, dataSetByteStream.byteArray.length, options);\n      }\n    } catch (e) {\n      const ex = {\n        exception: e,\n        dataSet\n      };\n\n      throw ex;\n    }\n\n    return dataSet;\n  }\n\n  // main function here\n  function parseTheByteStream () {\n    const metaHeaderDataSet = readPart10Header(byteArray, options);\n    const dataSet = readDataSet(metaHeaderDataSet);\n\n    return mergeDataSets(metaHeaderDataSet, dataSet);\n  }\n\n  // This is where we actually start parsing\n  return parseTheByteStream();\n}\n","import readDicomElementExplicit from './readDicomElementExplicit.js';\nimport readDicomElementImplicit from './readDicomElementImplicit.js';\n\n/**\n * Internal helper functions for parsing implicit and explicit DICOM data sets\n */\n\n/**\n * reads an explicit data set\n * @param byteStream the byte stream to read from\n * @param maxPosition the maximum position to read up to (optional - only needed when reading sequence items)\n */\nexport function parseDicomDataSetExplicit (dataSet, byteStream, maxPosition, options = {}) {\n  maxPosition = (maxPosition === undefined) ? byteStream.byteArray.length : maxPosition;\n\n  if (byteStream === undefined) {\n    throw 'dicomParser.parseDicomDataSetExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (maxPosition < byteStream.position || maxPosition > byteStream.byteArray.length) {\n    throw 'dicomParser.parseDicomDataSetExplicit: invalid value for parameter \\'maxP osition\\'';\n  }\n\n  const elements = dataSet.elements;\n\n  while (byteStream.position < maxPosition) {\n    const element = readDicomElementExplicit(byteStream, dataSet.warnings, options.untilTag);\n\n    elements[element.tag] = element;\n    if (element.tag === options.untilTag) {\n      return;\n    }\n  }\n\n  if (byteStream.position > maxPosition) {\n    throw 'dicomParser:parseDicomDataSetExplicit: buffer overrun';\n  }\n}\n\n/**\n * reads an implicit data set\n * @param byteStream the byte stream to read from\n * @param maxPosition the maximum position to read up to (optional - only needed when reading sequence items)\n */\nexport function parseDicomDataSetImplicit (dataSet, byteStream, maxPosition, options = {}) {\n  maxPosition = (maxPosition === undefined) ? dataSet.byteArray.length : maxPosition;\n\n  if (byteStream === undefined) {\n    throw 'dicomParser.parseDicomDataSetImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (maxPosition < byteStream.position || maxPosition > byteStream.byteArray.length) {\n    throw 'dicomParser.parseDicomDataSetImplicit: invalid value for parameter \\'maxPosition\\'';\n  }\n\n  const elements = dataSet.elements;\n\n  while (byteStream.position < maxPosition) {\n    const element = readDicomElementImplicit(byteStream, options.untilTag, options.vrCallback);\n\n    elements[element.tag] = element;\n    if (element.tag === options.untilTag) {\n      return;\n    }\n  }\n}\n","import findEndOfEncapsulatedElement from './findEndOfEncapsulatedPixelData.js';\nimport findAndSetUNElementLength from './findAndSetUNElementLength.js';\nimport findItemDelimitationItemAndSetElementLength from './findItemDelimitationItem.js';\nimport readTag from './readTag.js';\nimport readSequenceItemsExplicit from './readSequenceElementExplicit.js';\n\n/**\n * Internal helper functions for for parsing DICOM elements\n */\n\nconst getDataLengthSizeInBytesForVR = (vr) => {\n  if (vr === 'OB' ||\n      vr === 'OW' ||\n      vr === 'SQ' ||\n      vr === 'OF' ||\n      vr === 'UT' ||\n      vr === 'UN') {\n    return 4;\n  }\n\n  return 2;\n};\n\nexport default function readDicomElementExplicit (byteStream, warnings, untilTag) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const element = {\n    tag: readTag(byteStream),\n    vr: byteStream.readFixedString(2)\n    // length set below based on VR\n    // dataOffset set below based on VR and size of length\n  };\n\n  const dataLengthSizeBytes = getDataLengthSizeInBytesForVR(element.vr);\n\n  if (dataLengthSizeBytes === 2) {\n    element.length = byteStream.readUint16();\n    element.dataOffset = byteStream.position;\n  } else {\n    byteStream.seek(2);\n    element.length = byteStream.readUint32();\n    element.dataOffset = byteStream.position;\n  }\n\n  if (element.length === 4294967295) {\n    element.hadUndefinedLength = true;\n  }\n\n  if (element.tag === untilTag) {\n    return element;\n  }\n\n  // if VR is SQ, parse the sequence items\n  if (element.vr === 'SQ') {\n    readSequenceItemsExplicit(byteStream, element, warnings);\n\n    return element;\n  }\n\n  if (element.length === 4294967295) {\n    if (element.tag === 'x7fe00010') {\n      findEndOfEncapsulatedElement(byteStream, element, warnings);\n\n      return element;\n    } else if (element.vr === 'UN') {\n      findAndSetUNElementLength(byteStream, element);\n\n      return element;\n    }\n\n    findItemDelimitationItemAndSetElementLength(byteStream, element);\n\n    return element;\n  }\n\n  byteStream.seek(element.length);\n\n  return element;\n}\n","import findItemDelimitationItemAndSetElementLength from './findItemDelimitationItem.js';\nimport readSequenceItemsImplicit from './readSequenceElementImplicit.js';\nimport readTag from './readTag.js';\n\n/**\n * Internal helper functions for for parsing DICOM elements\n */\n\nconst isSequence = (element, byteStream, vrCallback) => {\n  // if a data dictionary callback was provided, use that to verify that the element is a sequence.\n  if (typeof vrCallback !== 'undefined') {\n    return (vrCallback(element.tag) === 'SQ');\n  }\n\n  if ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n\n    // Item start tag (fffe,e000) or sequence delimiter (i.e. end of sequence) tag (0fffe,e0dd)\n    // These are the tags that could potentially be found directly after a sequence start tag (the delimiter\n    // is found in the case of an empty sequence). This is not 100% safe because a non-sequence item\n    // could have data that has these bytes, but this is how to do it without a data dictionary.\n    return (nextTag === 'xfffee000') || (nextTag === 'xfffee0dd');\n  }\n\n  byteStream.warnings.push('eof encountered before finding sequence item tag or sequence delimiter tag in peeking to determine VR');\n\n  return false;\n};\n\nexport default function readDicomElementImplicit (byteStream, untilTag, vrCallback) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const element = {\n    tag: readTag(byteStream),\n    length: byteStream.readUint32(),\n    dataOffset: byteStream.position\n  };\n\n  if (element.length === 4294967295) {\n    element.hadUndefinedLength = true;\n  }\n\n  if (element.tag === untilTag) {\n    return element;\n  }\n\n  if (isSequence(element, byteStream, vrCallback)) {\n    // parse the sequence\n    readSequenceItemsImplicit(byteStream, element);\n\n    return element;\n  }\n\n  // if element is not a sequence and has undefined length, we have to\n  // scan the data for a magic number to figure out when it ends.\n  if (element.hadUndefinedLength) {\n    findItemDelimitationItemAndSetElementLength(byteStream, element);\n\n    return element;\n  }\n\n  // non sequence element with known length, skip over the data part\n  byteStream.seek(element.length);\n\n  return element;\n}\n","import readEncapsulatedPixelDataFromFragments from './readEncapsulatedPixelDataFromFragments.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nconst findFragmentIndexWithOffset = (fragments, offset) => {\n  for (let i = 0; i < fragments.length; i++) {\n    if (fragments[i].offset === offset) {\n      return i;\n    }\n  }\n};\n\nconst calculateNumberOfFragmentsForFrame = (frameIndex, basicOffsetTable, fragments, startFragmentIndex) => {\n  // special case for last frame\n  if (frameIndex === basicOffsetTable.length - 1) {\n    return fragments.length - startFragmentIndex;\n  }\n\n  // iterate through each fragment looking for the one matching the offset for the next frame\n  const nextFrameOffset = basicOffsetTable[frameIndex + 1];\n\n  for (let i = startFragmentIndex + 1; i < fragments.length; i++) {\n    if (fragments[i].offset === nextFrameOffset) {\n      return i - startFragmentIndex;\n    }\n  }\n\n  throw 'dicomParser.calculateNumberOfFragmentsForFrame: could not find fragment with offset matching basic offset table';\n};\n\n/**\n * Returns the pixel data for the specified frame in an encapsulated pixel data element that has a non\n * empty basic offset table.  Note that this function will fail if the basic offset table is empty - in that\n * case you need to determine which fragments map to which frames and read them using\n * readEncapsulatedPixelDataFromFragments().  Also see the function createJEPGBasicOffsetTable() to see\n * how a basic offset table can be created for JPEG images\n *\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the frame from\n * @param frameIndex - the zero based frame index\n * @param [basicOffsetTable] - optional array of starting offsets for frames\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {object} with the encapsulated pixel data\n */\nexport default function readEncapsulatedImageFrame (dataSet, pixelDataElement, frameIndex, basicOffsetTable, fragments) {\n  // default parameters\n  basicOffsetTable = basicOffsetTable || pixelDataElement.basicOffsetTable;\n  fragments = fragments || pixelDataElement.fragments;\n\n  // Validate parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'pixelDataElement\\'';\n  }\n  if (frameIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'frameIndex\\'';\n  }\n  if (basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' does not have basicOffsetTable';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010)';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have undefined length';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have fragments';\n  }\n  if (basicOffsetTable.length === 0) {\n    throw 'dicomParser.readEncapsulatedImageFrame: basicOffsetTable has zero entries';\n  }\n  if (frameIndex < 0) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'frameIndex\\' must be >= 0';\n  }\n  if (frameIndex >= basicOffsetTable.length) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'frameIndex\\' must be < basicOffsetTable.length';\n  }\n\n  // find starting fragment based on the offset for the frame in the basic offset table\n  const offset = basicOffsetTable[frameIndex];\n  const startFragmentIndex = findFragmentIndexWithOffset(fragments, offset);\n\n  if (startFragmentIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: unable to find fragment that matches basic offset table entry';\n  }\n\n  // calculate the number of fragments for this frame\n  const numFragments = calculateNumberOfFragmentsForFrame(frameIndex, basicOffsetTable, fragments, startFragmentIndex);\n\n  // now extract the frame from the fragments\n  return readEncapsulatedPixelDataFromFragments(dataSet, pixelDataElement, startFragmentIndex, numFragments, fragments);\n}\n","import readEncapsulatedImageFrame from './readEncapsulatedImageFrame.js';\nimport readEncapsulatedPixelDataFromFragments from './readEncapsulatedPixelDataFromFragments.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nlet deprecatedNoticeLogged = false;\n\n/**\n * Returns the pixel data for the specified frame in an encapsulated pixel data element.  If no basic offset\n * table is present, it assumes that all fragments are for one frame.  Note that this assumption/logic is not\n * valid for multi-frame instances so this function has been deprecated and will eventually be removed.  Code\n * should be updated to use readEncapsulatedPixelDataFromFragments() or readEncapsulatedImageFrame()\n *\n * @deprecated since version 1.6 - use readEncapsulatedPixelDataFromFragments() or readEncapsulatedImageFrame()\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the frame from\n * @param frame - the zero based frame index\n * @returns {object} with the encapsulated pixel data\n */\nexport default function readEncapsulatedPixelData (dataSet, pixelDataElement, frame) {\n  if (!deprecatedNoticeLogged) {\n    deprecatedNoticeLogged = true;\n\n    if (console && console.log) {\n      console.log('WARNING: dicomParser.readEncapsulatedPixelData() has been deprecated');\n    }\n  }\n\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'element\\'';\n  }\n  if (frame === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'frame\\'';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to non pixel data tag (expected tag = x7fe00010)';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (frame < 0) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'frame\\' must be >= 0';\n  }\n\n  // If the basic offset table is not empty, we can extract the frame\n  if (pixelDataElement.basicOffsetTable.length !== 0) {\n    return readEncapsulatedImageFrame(dataSet, pixelDataElement, frame);\n  }\n\n  // No basic offset table, assume all fragments are for one frame - NOTE that this is NOT a valid\n  // assumption but is the original behavior so we are keeping it for now\n  return readEncapsulatedPixelDataFromFragments(dataSet, pixelDataElement, 0, pixelDataElement.fragments.length);\n}\n","import alloc from './alloc.js';\nimport ByteStream from './byteStream.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport sharedCopy from './sharedCopy.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nconst calculateBufferSize = (fragments, startFragment, numFragments) => {\n  let bufferSize = 0;\n\n  for (let i = startFragment; i < startFragment + numFragments; i++) {\n    bufferSize += fragments[i].length;\n  }\n\n  return bufferSize;\n};\n\n/**\n * Returns the encapsulated pixel data from the specified fragments.  Use this function when you know\n * the fragments you want to extract data from.  See\n *\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the fragment data from\n * @param startFragmentIndex - zero based index of the first fragment to extract from\n * @param [numFragments] - the number of fragments to extract from, default is 1\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {object} byte array with the encapsulated pixel data\n */\nexport default function readEncapsulatedPixelDataFromFragments (dataSet, pixelDataElement, startFragmentIndex, numFragments, fragments) {\n  // default values\n  numFragments = numFragments || 1;\n  fragments = fragments || pixelDataElement.fragments;\n\n  // check parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'pixelDataElement\\'';\n  }\n  if (startFragmentIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'startFragmentIndex\\'';\n  }\n  if (numFragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'numFragments\\'';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments.length <= 0) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (startFragmentIndex < 0) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragmentIndex\\' must be >= 0';\n  }\n  if (startFragmentIndex >= pixelDataElement.fragments.length) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragmentIndex\\' must be < number of fragments';\n  }\n  if (numFragments < 1) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'numFragments\\' must be > 0';\n  }\n  if (startFragmentIndex + numFragments > pixelDataElement.fragments.length) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragment\\' + \\'numFragments\\' < number of fragments';\n  }\n\n  // create byte stream on the data for this pixel data element\n  const byteStream = new ByteStream(dataSet.byteArrayParser, dataSet.byteArray, pixelDataElement.dataOffset);\n\n  // seek past the basic offset table (no need to parse it again since we already have)\n  const basicOffsetTable = readSequenceItem(byteStream);\n\n  if (basicOffsetTable.tag !== 'xfffee000') {\n    throw 'dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000';\n  }\n\n  byteStream.seek(basicOffsetTable.length);\n\n  const fragmentZeroPosition = byteStream.position;\n\n  // tag + length\n  const fragmentHeaderSize = 8;\n\n  // if there is only one fragment, return a view on this array to avoid copying\n  if (numFragments === 1) {\n    return sharedCopy(byteStream.byteArray, fragmentZeroPosition + fragments[startFragmentIndex].offset + fragmentHeaderSize, fragments[startFragmentIndex].length);\n  }\n\n  // more than one fragment, combine all of the fragments into one buffer\n  const bufferSize = calculateBufferSize(fragments, startFragmentIndex, numFragments);\n  const pixelData = alloc(byteStream.byteArray, bufferSize);\n  let pixelDataIndex = 0;\n\n  for (let i = startFragmentIndex; i < startFragmentIndex + numFragments; i++) {\n    let fragmentOffset = fragmentZeroPosition + fragments[i].offset + fragmentHeaderSize;\n\n    for (let j = 0; j < fragments[i].length; j++) {\n      pixelData[pixelDataIndex++] = byteStream.byteArray[fragmentOffset++];\n    }\n  }\n\n  return pixelData;\n}\n","import ByteStream from './byteStream.js';\nimport DataSet from './dataSet.js';\nimport littleEndianByteArrayParser from './littleEndianByteArrayParser.js';\nimport readDicomElementExplicit from './readDicomElementExplicit.js';\n\n/**\n * Parses a DICOM P10 byte array and returns a DataSet object with the parsed elements.  If the options\n * argument is supplied and it contains the untilTag property, parsing will stop once that\n * tag is encoutered.  This can be used to parse partial byte streams.\n *\n * @param byteArray the byte array\n * @param options object to control parsing behavior (optional)\n * @returns {DataSet}\n * @throws error if an error occurs while parsing.  The exception object will contain a property dataSet with the\n *         elements successfully parsed before the error.\n */\n\nexport default function readPart10Header (byteArray, options) {\n  if (byteArray === undefined) {\n    throw 'dicomParser.readPart10Header: missing required parameter \\'byteArray\\'';\n  }\n\n  const littleEndianByteStream = new ByteStream(littleEndianByteArrayParser, byteArray);\n\n  function readPrefix () {\n    littleEndianByteStream.seek(128);\n    const prefix = littleEndianByteStream.readFixedString(4);\n\n    if (prefix !== 'DICM') {\n      throw 'dicomParser.readPart10Header: DICM prefix not found at location 132 - this is not a valid DICOM P10 file.';\n    }\n  }\n\n  // main function here\n  function readTheHeader () {\n    // Per the DICOM standard, the header is always encoded in Explicit VR Little Endian (see PS3.10, section 7.1)\n    // so use littleEndianByteStream throughout this method regardless of the transfer syntax\n    readPrefix();\n\n    const warnings = [];\n    const elements = {};\n\n    while (littleEndianByteStream.position < littleEndianByteStream.byteArray.length) {\n      const position = littleEndianByteStream.position;\n      const element = readDicomElementExplicit(littleEndianByteStream, warnings);\n\n      if (element.tag > 'x0002ffff') {\n        littleEndianByteStream.position = position;\n        break;\n      }\n      // Cache the littleEndianByteArrayParser for meta header elements, since the rest of the data set may be big endian\n      // and this parser will be needed later if the meta header values are to be read.\n      element.parser = littleEndianByteArrayParser;\n      elements[element.tag] = element;\n    }\n\n    const metaHeaderDataSet = new DataSet(littleEndianByteStream.byteArrayParser, littleEndianByteStream.byteArray, elements);\n\n    metaHeaderDataSet.warnings = littleEndianByteStream.warnings;\n    metaHeaderDataSet.position = littleEndianByteStream.position;\n\n    return metaHeaderDataSet;\n  }\n\n  // This is where we actually start parsing\n  return readTheHeader();\n}\n","import DataSet from './dataSet.js';\nimport readDicomElementExplicit from './readDicomElementExplicit.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport readTag from './readTag.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\nfunction readDicomDataSetExplicitUndefinedLength (byteStream, warnings) {\n  const elements = {};\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const element = readDicomElementExplicit(byteStream, warnings);\n\n    elements[element.tag] = element;\n\n    // we hit an item delimiter tag, return the current offset to mark\n    // the end of this sequence item\n    if (element.tag === 'xfffee00d') {\n      return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n    }\n  }\n\n  // eof encountered - log a warning and return what we have for the element\n  warnings.push('eof encountered before finding item delimiter tag while reading sequence item of undefined length');\n\n  return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n}\n\nfunction readSequenceItemExplicit (byteStream, warnings) {\n  const item = readSequenceItem(byteStream);\n\n  if (item.length === 4294967295) {\n    item.hadUndefinedLength = true;\n    item.dataSet = readDicomDataSetExplicitUndefinedLength(byteStream, warnings);\n    item.length = byteStream.position - item.dataOffset;\n  } else {\n    item.dataSet = new DataSet(byteStream.byteArrayParser, byteStream.byteArray, {});\n    parseDicomDataSet.parseDicomDataSetExplicit(item.dataSet, byteStream, byteStream.position + item.length);\n  }\n\n  return item;\n}\n\nfunction readSQElementUndefinedLengthExplicit (byteStream, element, warnings) {\n  while ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    // end reading this sequence if the next tag is the sequence delimitation item\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n    if (nextTag === 'xfffee0dd') {\n      // set the correct length\n      element.length = byteStream.position - element.dataOffset;\n      byteStream.seek(8);\n\n      return element;\n    }\n\n    const item = readSequenceItemExplicit(byteStream, warnings);\n\n    element.items.push(item);\n  }\n\n  warnings.push('eof encountered before finding sequence delimitation tag while reading sequence of undefined length');\n  element.length = byteStream.position - element.dataOffset;\n}\n\nfunction readSQElementKnownLengthExplicit (byteStream, element, warnings) {\n  const maxPosition = element.dataOffset + element.length;\n\n  while (byteStream.position < maxPosition) {\n    const item = readSequenceItemExplicit(byteStream, warnings);\n\n    element.items.push(item);\n  }\n}\n\nexport default function readSequenceItemsExplicit (byteStream, element, warnings) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItemsExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.readSequenceItemsExplicit: missing required parameter \\'element\\'';\n  }\n\n  element.items = [];\n\n  if (element.length === 4294967295) {\n    readSQElementUndefinedLengthExplicit(byteStream, element, warnings);\n  } else {\n    readSQElementKnownLengthExplicit(byteStream, element, warnings);\n  }\n}\n","import DataSet from './dataSet.js';\nimport readDicomElementImplicit from './readDicomElementImplicit.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport readTag from './readTag.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\nfunction readDicomDataSetImplicitUndefinedLength (byteStream, vrCallback) {\n  const elements = {};\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const element = readDicomElementImplicit(byteStream, undefined, vrCallback);\n\n    elements[element.tag] = element;\n\n    // we hit an item delimiter tag, return the current offset to mark\n    // the end of this sequence item\n    if (element.tag === 'xfffee00d') {\n      return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n    }\n  }\n\n  // eof encountered - log a warning and return what we have for the element\n  byteStream.warnings.push('eof encountered before finding sequence item delimiter in sequence item of undefined length');\n\n  return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n}\n\nfunction readSequenceItemImplicit (byteStream, vrCallback) {\n  const item = readSequenceItem(byteStream);\n\n  if (item.length === 4294967295) {\n    item.hadUndefinedLength = true;\n    item.dataSet = readDicomDataSetImplicitUndefinedLength(byteStream, vrCallback);\n    item.length = byteStream.position - item.dataOffset;\n  } else {\n    item.dataSet = new DataSet(byteStream.byteArrayParser, byteStream.byteArray, {});\n    parseDicomDataSet.parseDicomDataSetImplicit(item.dataSet, byteStream, byteStream.position + item.length, { vrCallback });\n  }\n\n  return item;\n}\n\nfunction readSQElementUndefinedLengthImplicit (byteStream, element, vrCallback) {\n  while ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    // end reading this sequence if the next tag is the sequence delimitation item\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n\n    if (nextTag === 'xfffee0dd') {\n      // set the correct length\n      element.length = byteStream.position - element.dataOffset;\n      byteStream.seek(8);\n\n      return element;\n    }\n\n    const item = readSequenceItemImplicit(byteStream, vrCallback);\n\n    element.items.push(item);\n  }\n\n  byteStream.warnings.push('eof encountered before finding sequence delimiter in sequence of undefined length');\n  element.length = byteStream.byteArray.length - element.dataOffset;\n}\n\nfunction readSQElementKnownLengthImplicit (byteStream, element, vrCallback) {\n  const maxPosition = element.dataOffset + element.length;\n\n  while (byteStream.position < maxPosition) {\n    const item = readSequenceItemImplicit(byteStream, vrCallback);\n\n    element.items.push(item);\n  }\n}\n\n/**\n * Reads sequence items for an element in an implicit little endian byte stream\n * @param byteStream the implicit little endian byte stream\n * @param element the element to read the sequence items for\n * @param vrCallback an optional method that returns a VR string given a tag\n */\nexport default function readSequenceItemsImplicit (byteStream, element, vrCallback) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItemsImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.readSequenceItemsImplicit: missing required parameter \\'element\\'';\n  }\n\n  element.items = [];\n\n  if (element.length === 4294967295) {\n    readSQElementUndefinedLengthImplicit(byteStream, element, vrCallback);\n  } else {\n    readSQElementKnownLengthImplicit(byteStream, element, vrCallback);\n  }\n}\n","import readTag from './readTag.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads the tag and length of a sequence item and returns them as an object with the following properties\n *  tag : string for the tag of this element in the format xggggeeee\n *  length: the number of bytes in this item or 4294967295 if undefined\n *  dataOffset: the offset into the byteStream of the data for this item\n * @param byteStream the byte\n * @returns {{tag: string, length: integer, dataOffset: integer}}\n */\nexport default function readSequenceItem (byteStream) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItem: missing required parameter \\'byteStream\\'';\n  }\n\n  const element = {\n    tag: readTag(byteStream),\n    length: byteStream.readUint32(),\n    dataOffset: byteStream.position\n  };\n\n  if (element.tag !== 'xfffee000') {\n    throw `dicomParser.readSequenceItem: item tag (FFFE,E000) not found at offset ${byteStream.position}`;\n  }\n\n  return element;\n}\n","/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads a tag (group number and element number) from a byteStream\n * @param byteStream the byte stream to read from\n * @returns {string} the tag in format xggggeeee where gggg is the lowercase hex value of the group number\n * and eeee is the lower case hex value of the element number\n */\nexport default function readTag (byteStream) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readTag: missing required parameter \\'byteStream\\'';\n  }\n\n  const groupNumber = byteStream.readUint16() * 256 * 256;\n  const elementNumber = byteStream.readUint16();\n  const tag = `x${(`00000000${(groupNumber + elementNumber).toString(16)}`).substr(-8)}`;\n\n  return tag;\n}\n","/**\n *\n * Internal helper function to create a shared copy of a byteArray\n *\n */\n\n/**\n * Creates a view of the underlying byteArray.  The view is of the same type as the byteArray (e.g.\n * Uint8Array or Buffer) and shares the same underlying memory (changing one changes the other)\n * @param byteArray the underlying byteArray (either Uint8Array or Buffer)\n * @param byteOffset offset into the underlying byteArray to create the view of\n * @param length number of bytes in the view\n * @returns {object} Uint8Array or Buffer depending on the type of byteArray\n */\nexport default function sharedCopy (byteArray, byteOffset, length) {\n  if (typeof Buffer !== 'undefined' && byteArray instanceof Buffer) {\n    return byteArray.slice(byteOffset, byteOffset + length);\n  } else if (byteArray instanceof Uint8Array) {\n    return new Uint8Array(byteArray.buffer, byteArray.byteOffset + byteOffset, length);\n  }\n  throw 'dicomParser.from: unknown type for byteArray';\n}\n","// Each JPEG image has an end of image marker 0xFFD9\nfunction isEndOfImageMarker (dataSet, position) {\n  return (dataSet.byteArray[position] === 0xFF &&\n  dataSet.byteArray[position + 1] === 0xD9);\n}\n\nfunction isFragmentEndOfImage (dataSet, pixelDataElement, fragmentIndex) {\n  var fragment = pixelDataElement.fragments[fragmentIndex];\n  // Need to check the last two bytes and the last three bytes for marker since odd length\n  // fragments are zero padded\n\n  if (isEndOfImageMarker(dataSet, fragment.position + fragment.length - 2) ||\n    isEndOfImageMarker(dataSet, fragment.position + fragment.length - 3)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction findLastImageFrameFragmentIndex (dataSet, pixelDataElement, startFragment) {\n  for (var fragmentIndex = startFragment; fragmentIndex < pixelDataElement.fragments.length; fragmentIndex++) {\n    if (isFragmentEndOfImage(dataSet, pixelDataElement, fragmentIndex)) {\n      return fragmentIndex;\n    }\n  }\n}\n\n/**\n * Creates a basic offset table by scanning fragments for JPEG start of image and end Of Image markers\n * @param {object} dataSet - the parsed dicom dataset\n * @param {object} pixelDataElement - the pixel data element\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {Array} basic offset table (array of offsets to beginning of each frame)\n */\nexport default function createJPEGBasicOffsetTable (dataSet, pixelDataElement, fragments) {\n  // Validate parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: missing required parameter dataSet';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: missing required parameter pixelDataElement';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010\\'';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments.length <= 0) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (fragments && fragments.length <= 0) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'fragments\\' must not be zero length';\n  }\n\n  // Default values\n  fragments = fragments || pixelDataElement.fragments;\n\n  var basicOffsetTable = [];\n\n  var startFragmentIndex = 0;\n\n  while (true) {\n    // Add the offset for the start fragment\n    basicOffsetTable.push(pixelDataElement.fragments[startFragmentIndex].offset);\n    var endFragmentIndex = findLastImageFrameFragmentIndex(dataSet, pixelDataElement, startFragmentIndex);\n\n    if (endFragmentIndex === undefined || endFragmentIndex === pixelDataElement.fragments.length - 1) {\n      return basicOffsetTable;\n    }\n    startFragmentIndex = endFragmentIndex + 1;\n  }\n}\n","import explicitElementToString from './elementToString.js';\nimport * as util from './util.js';\n\n/**\n * converts an explicit dataSet to a javascript object\n * @param dataSet\n * @param options\n */\nexport default function explicitDataSetToJS (dataSet, options) {\n  if (dataSet === undefined) {\n    throw 'dicomParser.explicitDataSetToJS: missing required parameter dataSet';\n  }\n\n  options = options || {\n    omitPrivateAttibutes: true, // true if private elements should be omitted\n    maxElementLength: 128 // maximum element length to try and convert to string format\n  };\n\n  var result = {\n\n  };\n\n  for (var tag in dataSet.elements) {\n    var element = dataSet.elements[tag];\n\n    // skip this element if it a private element and our options specify that we should\n    if (options.omitPrivateAttibutes === true && util.isPrivateTag(tag)) {\n      continue;\n    }\n\n    if (element.items) {\n      // handle sequences\n      var sequenceItems = [];\n\n      for (var i = 0; i < element.items.length; i++) {\n        sequenceItems.push(explicitDataSetToJS(element.items[i].dataSet, options));\n      }\n      result[tag] = sequenceItems;\n    } else {\n      var asString;\n\n      asString = undefined;\n      if (element.length < options.maxElementLength) {\n        asString = explicitElementToString(dataSet, element);\n      }\n\n      if (asString !== undefined) {\n        result[tag] = asString;\n      } else {\n        result[tag] = {\n          dataOffset: element.dataOffset,\n          length: element.length\n        };\n      }\n    }\n  }\n\n  return result;\n}\n","import * as util from './util.js';\n\n/**\n * Converts an explicit VR element to a string or undefined if it is not possible to convert.\n * Throws an error if an implicit element is supplied\n * @param dataSet\n * @param element\n * @returns {*}\n */\nexport default function explicitElementToString (dataSet, element) {\n  if (dataSet === undefined || element === undefined) {\n    throw 'dicomParser.explicitElementToString: missing required parameters';\n  }\n  if (element.vr === undefined) {\n    throw 'dicomParser.explicitElementToString: cannot convert implicit element to string';\n  }\n  var vr = element.vr;\n  var tag = element.tag;\n\n  var textResult;\n\n  function multiElementToString (numItems, func) {\n    var result = '';\n\n    for (var i = 0; i < numItems; i++) {\n      if (i !== 0) {\n        result += '/';\n      }\n      result += func.call(dataSet, tag, i).toString();\n    }\n\n    return result;\n  }\n\n  if (util.isStringVr(vr) === true) {\n    textResult = dataSet.string(tag);\n  } else if (vr === 'AT') {\n    var num = dataSet.uint32(tag);\n\n    if (num === undefined) {\n      return undefined;\n    }\n    if (num < 0) {\n      num = 0xFFFFFFFF + num + 1;\n    }\n\n    return `x${num.toString(16).toUpperCase()}`;\n  } else if (vr === 'US') {\n    textResult = multiElementToString(element.length / 2, dataSet.uint16);\n  } else if (vr === 'SS') {\n    textResult = multiElementToString(element.length / 2, dataSet.int16);\n  } else if (vr === 'UL') {\n    textResult = multiElementToString(element.length / 4, dataSet.uint32);\n  } else if (vr === 'SL') {\n    textResult = multiElementToString(element.length / 4, dataSet.int32);\n  } else if (vr === 'FD') {\n    textResult = multiElementToString(element.length / 8, dataSet.double);\n  } else if (vr === 'FL') {\n    textResult = multiElementToString(element.length / 4, dataSet.float);\n  }\n\n  return textResult;\n}\n","export * from './util.js';\n\nexport { default as parseTM } from './parseTM.js';\nexport { default as parseDA } from './parseDA.js';\nexport { default as explicitElementToString } from './elementToString.js';\nexport { default as explicitDataSetToJS } from './dataSetToJS.js';\nexport { default as createJPEGBasicOffsetTable } from './createJPEGBasicOffsetTable.js';\n","// algorithm based on http://stackoverflow.com/questions/1433030/validate-number-of-days-in-a-given-month\nfunction daysInMonth (m, y) { // m is 0 indexed: 0-11\n  switch (m) {\n  case 2 :\n    return (y % 4 == 0 && y % 100) || y % 400 == 0 ? 29 : 28;\n  case 9 : case 4 : case 6 : case 11 :\n    return 30;\n  default :\n    return 31;\n  }\n}\n\nfunction isValidDate (d, m, y) {\n  // make year is a number\n  if (isNaN(y)) {\n    return false;\n  }\n\n  return m > 0 && m <= 12 && d > 0 && d <= daysInMonth(m, y);\n}\n\n\n/**\n * Parses a DA formatted string into a Javascript object\n * @param {string} date a string in the DA VR format\n * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid\n * @returns {*} Javascript object with properties year, month and day or undefined if not present or not 8 bytes long\n */\nexport default function parseDA (date, validate) {\n  if (date && date.length === 8) {\n    var yyyy = parseInt(date.substring(0, 4), 10);\n    var mm = parseInt(date.substring(4, 6), 10);\n    var dd = parseInt(date.substring(6, 8), 10);\n\n    if (validate) {\n      if (isValidDate(dd, mm, yyyy) !== true) {\n        throw `invalid DA '${date}'`;\n      }\n    }\n\n    return {\n      year: yyyy,\n      month: mm,\n      day: dd\n    };\n  }\n  if (validate) {\n    throw `invalid DA '${date}'`;\n  }\n\n  return undefined;\n}\n","/**\n * Parses a TM formatted string into a javascript object with properties for hours, minutes, seconds and fractionalSeconds\n * @param {string} time - a string in the TM VR format\n * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid\n * @returns {*} javascript object with properties for hours, minutes, seconds and fractionalSeconds or undefined if no element or data.  Missing fields are set to undefined\n */\nexport default function parseTM (time, validate) {\n  if (time.length >= 2) // must at least have HH\n  {\n    // 0123456789\n    // HHMMSS.FFFFFF\n    var hh = parseInt(time.substring(0, 2), 10);\n    var mm = time.length >= 4 ? parseInt(time.substring(2, 4), 10) : undefined;\n    var ss = time.length >= 6 ? parseInt(time.substring(4, 6), 10) : undefined;\n    var ffffff = time.length >= 8 ? parseInt(time.substring(7, 13), 10) : undefined;\n\n    if (validate) {\n      if ((isNaN(hh)) ||\n        (mm !== undefined && isNaN(mm)) ||\n        (ss !== undefined && isNaN(ss)) ||\n        (ffffff !== undefined && isNaN(ffffff)) ||\n        (hh < 0 || hh > 23) ||\n        (mm && (mm < 0 || mm > 59)) ||\n        (ss && (ss < 0 || ss > 59)) ||\n        (ffffff && (ffffff < 0 || ffffff > 999999))) {\n        throw `invalid TM '${time}'`;\n      }\n    }\n\n    return {\n      hours: hh,\n      minutes: mm,\n      seconds: ss,\n      fractionalSeconds: ffffff\n    };\n  }\n\n  if (validate) {\n    throw `invalid TM '${time}'`;\n  }\n\n  return undefined;\n}\n","const stringVrs = {\n  AE: true,\n  AS: true,\n  AT: false,\n  CS: true,\n  DA: true,\n  DS: true,\n  DT: true,\n  FL: false,\n  FD: false,\n  IS: true,\n  LO: true,\n  LT: true,\n  OB: false,\n  OD: false,\n  OF: false,\n  OW: false,\n  PN: true,\n  SH: true,\n  SL: false,\n  SQ: false,\n  SS: false,\n  ST: true,\n  TM: true,\n  UI: true,\n  UL: false,\n  UN: undefined, // dunno\n  UR: true,\n  US: false,\n  UT: true\n};\n\n/**\n * Tests to see if vr is a string or not.\n * @param vr\n * @returns true if string, false it not string, undefined if unknown vr or UN type\n */\nconst isStringVr = (vr) => stringVrs[vr];\n\n/**\n * Tests to see if a given tag in the format xggggeeee is a private tag or not\n * @param tag\n * @returns {boolean}\n */\nconst isPrivateTag = (tag) => {\n  const lastGroupDigit = parseInt(tag[4], 10);\n  const groupIsOdd = (lastGroupDigit % 2) === 1;\n\n\n  return groupIsOdd;\n};\n\n/**\n * Parses a PN formatted string into a javascript object with properties for givenName, familyName, middleName, prefix and suffix\n * @param personName a string in the PN VR format\n * @param index\n * @returns {*} javascript object with properties for givenName, familyName, middleName, prefix and suffix or undefined if no element or data\n */\nconst parsePN = (personName) => {\n  if (personName === undefined) {\n    return undefined;\n  }\n  const stringValues = personName.split('^');\n\n\n  return {\n    familyName: stringValues[0],\n    givenName: stringValues[1],\n    middleName: stringValues[2],\n    prefix: stringValues[3],\n    suffix: stringValues[4]\n  };\n};\n\nexport {\n  isStringVr,\n  isPrivateTag,\n  parsePN\n};\n","export default '1.8.4';\n"],"sourceRoot":""}